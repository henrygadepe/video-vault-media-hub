{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/UploadProgress.tsx"],"sourcesContent":["interface UploadProgressProps {\n  progress: number\n}\n\nexport default function UploadProgress({ progress }: UploadProgressProps) {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-center\">\n        <div className=\"w-20 h-20 bg-gradient-to-br from-black to-gray-700 rounded-2xl flex items-center justify-center\">\n          <div className=\"w-10 h-10 bg-white rounded-xl animate-pulse\"></div>\n        </div>\n      </div>\n      \n      <div className=\"text-center\">\n        <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">Uploading your video...</h4>\n        <p className=\"text-gray-600 mb-4\">Please don't close this page</p>\n        \n        <div className=\"w-full bg-gray-200 rounded-full h-3 mb-2\">\n          <div \n            className=\"bg-gradient-to-r from-black to-gray-700 h-3 rounded-full transition-all duration-300 ease-out\"\n            style={{ width: `${Math.min(progress, 100)}%` }}\n          ></div>\n        </div>\n        \n        <div className=\"flex justify-between text-sm text-gray-600\">\n          <span>{Math.round(progress)}% complete</span>\n          <span>{progress < 100 ? 'Uploading...' : 'Processing...'}</span>\n        </div>\n      </div>\n      \n      {progress >= 100 && (\n        <div className=\"text-center\">\n          <div className=\"inline-flex items-center space-x-2 text-green-600 font-medium\">\n            <div className=\"w-5 h-5 bg-green-500 rounded-full flex items-center justify-center\">\n              <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n            </div>\n            <span>Upload complete!</span>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAIe,SAAS,eAAe,EAAE,QAAQ,EAAuB;IACtE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;0BAInB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAElC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,OAAO,GAAG,KAAK,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC;4BAAC;;;;;;;;;;;kCAIlD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;oCAAM,KAAK,KAAK,CAAC;oCAAU;;;;;;;0CAC5B,6LAAC;0CAAM,WAAW,MAAM,iBAAiB;;;;;;;;;;;;;;;;;;YAI5C,YAAY,qBACX,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,6LAAC;sCAAK;;;;;;;;;;;;;;;;;;;;;;;AAMlB;KAtCwB","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/profile/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef } from 'react'\nimport UploadProgress from '../../components/UploadProgress'\n\ninterface UserProfile {\n  name: string\n  email: string\n  bio: string\n  avatar?: string\n}\n\nexport default function ProfilePage() {\n  const [profile, setProfile] = useState<UserProfile>({\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    bio: 'Content creator and video enthusiast'\n  })\n  \n  const [isEditing, setIsEditing] = useState(false)\n  const [uploading, setUploading] = useState(false)\n  const [uploadProgress, setUploadProgress] = useState(0)\n  const [uploadMessage, setUploadMessage] = useState('')\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  const handleProfileUpdate = async () => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    setIsEditing(false)\n    setUploadMessage('Profile updated successfully!')\n    setTimeout(() => setUploadMessage(''), 3000)\n  }\n\n  const handleVideoUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]\n    if (!file) return\n\n    // Validate file type\n    if (!file.type.startsWith('video/')) {\n      setUploadMessage('Please select a valid video file')\n      setTimeout(() => setUploadMessage(''), 3000)\n      return\n    }\n\n    // Validate file size (50MB limit for demo)\n    if (file.size > 50 * 1024 * 1024) {\n      setUploadMessage('File size must be less than 50MB')\n      setTimeout(() => setUploadMessage(''), 3000)\n      return\n    }\n\n    setUploading(true)\n    setUploadProgress(0)\n    setUploadMessage('')\n\n    try {\n      // Create form data\n      const formData = new FormData()\n      formData.append('video', file)\n\n      // Simulate upload progress\n      const interval = setInterval(() => {\n        setUploadProgress(prev => {\n          if (prev >= 95) {\n            clearInterval(interval)\n            return 95\n          }\n          return prev + Math.random() * 15\n        })\n      }, 200)\n\n      // Make actual API call\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      })\n\n      const result = await response.json()\n      \n      // Complete progress\n      setUploadProgress(100)\n      \n      if (result.success) {\n        setUploadMessage('Video uploaded successfully!')\n        setTimeout(() => setUploadMessage(''), 3000)\n      } else {\n        setUploadMessage(result.error || 'Upload failed. Please try again.')\n        setTimeout(() => setUploadMessage(''), 3000)\n      }\n      \n    } catch (error) {\n      setUploadMessage('Upload failed. Please try again.')\n      setTimeout(() => setUploadMessage(''), 3000)\n    } finally {\n      setUploading(false)\n      setUploadProgress(0)\n      if (fileInputRef.current) {\n        fileInputRef.current.value = ''\n      }\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-white to-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-100\">\n        <div className=\"px-6 py-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">Profile</h1>\n            <button\n              onClick={() => setIsEditing(!isEditing)}\n              className={`px-4 py-2 rounded-xl font-medium transition-all duration-200 ${\n                isEditing \n                  ? 'bg-gray-100 text-gray-700 hover:bg-gray-200' \n                  : 'bg-black text-white hover:bg-gray-800'\n              }`}\n            >\n              {isEditing ? 'Cancel' : 'Edit'}\n            </button>\n          </div>\n\n          {/* Profile Avatar */}\n          <div className=\"flex items-center space-x-4 mb-6\">\n            <div className=\"w-20 h-20 bg-gradient-to-br from-gray-800 to-black rounded-2xl flex items-center justify-center\">\n              <div className=\"w-10 h-10 bg-white rounded-xl\"></div>\n            </div>\n            <div className=\"flex-1\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">{profile.name}</h2>\n              <p className=\"text-gray-600\">{profile.email}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"px-6 py-6 space-y-6\">\n        {/* Profile Information */}\n        <div className=\"bg-white rounded-2xl shadow-sm border border-gray-100 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Personal Information</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Full Name</label>\n              {isEditing ? (\n                <input\n                  type=\"text\"\n                  value={profile.name}\n                  onChange={(e) => setProfile({...profile, name: e.target.value})}\n                  className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-black focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Enter your full name\"\n                />\n              ) : (\n                <div className=\"px-4 py-3 bg-gray-50 rounded-xl text-gray-900\">{profile.name}</div>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n              {isEditing ? (\n                <input\n                  type=\"email\"\n                  value={profile.email}\n                  onChange={(e) => setProfile({...profile, email: e.target.value})}\n                  className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-black focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Enter your email\"\n                />\n              ) : (\n                <div className=\"px-4 py-3 bg-gray-50 rounded-xl text-gray-900\">{profile.email}</div>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Bio</label>\n              {isEditing ? (\n                <textarea\n                  value={profile.bio}\n                  onChange={(e) => setProfile({...profile, bio: e.target.value})}\n                  rows={3}\n                  className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-black focus:border-transparent transition-all duration-200 resize-none\"\n                  placeholder=\"Tell us about yourself\"\n                />\n              ) : (\n                <div className=\"px-4 py-3 bg-gray-50 rounded-xl text-gray-900\">{profile.bio}</div>\n              )}\n            </div>\n\n            {isEditing && (\n              <button\n                onClick={handleProfileUpdate}\n                className=\"w-full bg-black text-white py-3 px-6 rounded-xl font-medium hover:bg-gray-800 transition-all duration-200\"\n              >\n                Save Changes\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Video Upload Section */}\n        <div className=\"bg-white rounded-2xl shadow-sm border border-gray-100 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Add New Video</h3>\n          \n          {uploading ? (\n            <UploadProgress progress={uploadProgress} />\n          ) : (\n            <div className=\"space-y-4\">\n              <div className=\"border-2 border-dashed border-gray-200 rounded-xl p-8 text-center hover:border-gray-300 transition-colors\">\n                <div className=\"w-16 h-16 bg-gray-100 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                  <div className=\"w-8 h-8 bg-gray-400 rounded-lg\"></div>\n                </div>\n                <h4 className=\"text-lg font-medium text-gray-900 mb-2\">Upload your video</h4>\n                <p className=\"text-gray-600 mb-4\">Choose a video file to add to your collection</p>\n                \n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\"video/*\"\n                  onChange={handleVideoUpload}\n                  className=\"hidden\"\n                  id=\"video-upload\"\n                />\n                <label\n                  htmlFor=\"video-upload\"\n                  className=\"inline-block bg-black text-white py-3 px-6 rounded-xl font-medium hover:bg-gray-800 transition-all duration-200 cursor-pointer\"\n                >\n                  Choose Video File\n                </label>\n                \n                <p className=\"text-xs text-gray-500 mt-3\">\n                  Supported formats: MP4, MOV, AVI • Max size: 50MB\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Success/Error Messages */}\n        {uploadMessage && (\n          <div className={`p-4 rounded-xl ${\n            uploadMessage.includes('success') \n              ? 'bg-green-50 text-green-800 border border-green-200' \n              : 'bg-red-50 text-red-800 border border-red-200'\n          }`}>\n            <p className=\"font-medium\">{uploadMessage}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}